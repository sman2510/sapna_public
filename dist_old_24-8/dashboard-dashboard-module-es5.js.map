{"version":3,"sources":["webpack:///./src/app/layout/dashboard/dashboard.component.html","webpack:///./src/app/layout/dashboard/dashboard-routing.module.ts","webpack:///./src/app/layout/dashboard/dashboard.component.scss","webpack:///./src/app/layout/dashboard/dashboard.component.ts","webpack:///./src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,4zBAA4zB,YAAY,oEAAoE,UAAU,qK;;;;;;;;;;;;;;;;;;;ACA72B;AACc;AACI;AAE3D,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAkB;KAC1C;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IADY,sBAAsB;QAJlC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,sBAAsB,CAClC;IAAD,6BAAC;CAAA;AADkC;;;;;;;;;;;;ACdnC,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;ACAb;AACS;AAChB;AACS;AACJ;AACP;AAWzC;IAII,4BACW,MAAc,EACb,UAAsB,EACtB,MAAqB,EACrB,cAAiC;QAHlC,WAAM,GAAN,MAAM,CAAQ;QACb,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,mBAAc,GAAd,cAAc,CAAmB;QANtC,aAAQ,GAAgB,EAAE,CAAC;IAO9B,CAAC;IAGL,qCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAGD,wCAAW,GAAX;QAAA,iBA8DC;QA7DG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,aAAG;YACjE,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC;gBACvC,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,IAAI,QAAQ,GAAG,CAAC,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAG,CAAC,IAAI,SAAS,EAAC;oBACd,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;oBACxB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,mBAAmB,CAAC;iBACrC;qBAAK,IAAG,CAAC,IAAI,cAAc,EAAC;oBACzB,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;oBAC7B,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;iBAC/B;qBAAK,IAAG,CAAC,IAAI,SAAS,EAAC;oBACpB,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;oBACxB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;iBAC9B;qBAAK,IAAG,CAAC,IAAI,YAAY,EAAC;oBACvB,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;oBACvB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,sBAAsB,CAAC;iBACxC;qBAAK,IAAG,CAAC,IAAI,OAAO,EAAC;oBAClB,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;oBACtB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,oBAAoB,CAAC;oBACnC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;qBAAK,IAAG,CAAC,IAAI,QAAQ,EAAC;oBACnB,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;oBACvB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC;oBAChC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;gBAED,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAG,CAAC,IAAI,OAAO,EAAC;oBACZ,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,GAAG,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;oBACzB,GAAG,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC5B,GAAG,CAAC,MAAM,CAAC,GAAG,mBAAmB,CAAC;oBAClC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEnB,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,IAAI,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;oBAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,uBAAuB,CAAC;oBACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,EACD,eAAK;YACD,IAAG,KAAK,CAAC,OAAO,CAAC,EAAC;gBACd,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC1C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;gBA1EkB,sDAAM;gBACD,+DAAU;gBACd,wDAAa;gBACL,6DAAiB;;IARpC,kBAAkB;QAR9B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,oKAAyC;YAEzC,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;YAChC,SAAS,EAAE,CAAC,+DAAU,CAAC;;SAC1B,CAAC;+EAOqB,sDAAM;YACD,+DAAU;YACd,wDAAa;YACL,6DAAiB;OARpC,kBAAkB,CAkF9B;IAAD,yBAAC;CAAA;AAlF8B;;;;;;;;;;;;;;;;;;;;;;;;AChBU;AACM;AACgC;AACX;AACT;AACjB;AACK;AAe/C;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAb3B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,4EAAiB;gBACjB,yEAAc;gBACd,gFAAsB;gBACtB,kDAAU;gBACV,4DAAgB;aACnB;YACD,YAAY,EAAE;gBACV,uEAAkB;aACrB;SACJ,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH","file":"dashboard-dashboard-module-es5.js","sourcesContent":["module.exports = \"<div [@routerTransition]>\\r\\n\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n        <p style=\\\"color: white\\\">Please Wait... </p>  \\r\\n    </ngx-spinner> \\r\\n\\r\\n    <h2>Dashboard</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-3 col-lg-6 marBt_1Per\\\" *ngFor=\\\"let item of listData\\\">\\r\\n            <div class=\\\"card text-white\\\" [ngClass]='item.style'>\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col col-xs-3\\\">\\r\\n                            <i class=\\\"fa-2x\\\" [ngClass]='item.icon'></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"col col-xs-9 text-right\\\">\\r\\n                            <div class=\\\"d-block\\\">{{item.value}}</div>\\r\\n                            <div class=\\\"d-block huge\\\">{{item.key}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: DashboardComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from \"../service/api.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n    animations: [routerTransition()],\r\n    providers: [ApiService],\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n    public apiUrl : any;\r\n    public listData : Array<any> = [];\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private apiService: ApiService,\r\n        private toastr: ToastrService,\r\n        private SpinnerService: NgxSpinnerService\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.listGetData();\r\n    }\r\n\r\n\r\n    listGetData(){\r\n        this.SpinnerService.show();\r\n        this.apiService.getData('dashboard?pageName=dashboard').subscribe(res => {\r\n            var tempData = [];\r\n            Object.keys(res['data']).forEach(function(d) {\r\n                var obj = {};\r\n                var vidCount = 0;\r\n                obj['value'] = res['data'][d];\r\n                if(d == 'student'){\r\n                    obj['key'] = 'Students';\r\n                    obj['style'] = 'bg-primary';\r\n                    obj['icon'] = 'fa fa-user-circle';\r\n                }else if(d == 'subscription'){\r\n                    obj['key'] = 'Subscriptions';\r\n                    obj['style'] = 'bg-warning';\r\n                    obj['icon'] = 'fa fa-money';\r\n                }else if(d == 'teacher'){\r\n                    obj['key'] = 'Teachers';\r\n                    obj['style'] = 'bg-success';\r\n                    obj['icon'] = 'fa fa-user';\r\n                }else if(d == 'user_class'){\r\n                    obj['key'] = 'Classes';\r\n                    obj['style'] = 'bg-primary';\r\n                    obj['icon'] = 'fa fa-graduation-cap';\r\n                }else if(d == 'video'){\r\n                    obj['key'] = 'Videos';\r\n                    obj['style'] = 'bg-warning';\r\n                    obj['icon'] = 'fa fa-video-camera';\r\n                    vidCount = res['data'][d];\r\n                }else if(d == 'vendor'){\r\n                    obj['key'] = 'Vendors';\r\n                    obj['style'] = 'bg-warning';\r\n                    obj['icon'] = 'fa fa-user-plus';\r\n                    vidCount = res['data'][d];\r\n                }\r\n\r\n                tempData.push(obj);\r\n                if(d == 'video'){\r\n                    var doc = {};\r\n                    doc['key'] = 'Documents';\r\n                    doc['style'] = 'bg-success';\r\n                    doc['icon'] = 'fa fa-file-text-o';\r\n                    doc['value'] = res['data'][d];\r\n                    tempData.push(doc);\r\n\r\n                    var quiz = {};\r\n                    quiz['key'] = 'Assessment';\r\n                    quiz['style'] = 'bg-primary';\r\n                    quiz['icon'] = 'fa fa-pencil-square-o';\r\n                    quiz['value'] = res['data'][d];\r\n                    tempData.push(quiz);\r\n                }\r\n            });\r\n            this.listData = tempData;\r\n            this.SpinnerService.hide();\r\n        },\r\n        error => {\r\n            if(error['error']){\r\n                this.toastr.error(error.error['message']);\r\n                this.router.navigate(['/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { StatModule } from '../../shared';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";  \r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        NgbCarouselModule,\r\n        NgbAlertModule,\r\n        DashboardRoutingModule,\r\n        StatModule,\r\n        NgxSpinnerModule\r\n    ],\r\n    declarations: [\r\n        DashboardComponent,\r\n    ]\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":""}