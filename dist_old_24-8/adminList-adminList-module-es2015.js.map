{"version":3,"sources":["webpack:///./src/app/layout/adminList/adminList.component.html","webpack:///./src/app/layout/adminList/adminList-routing.module.ts","webpack:///./src/app/layout/adminList/adminList.component.scss","webpack:///./src/app/layout/adminList/adminList.component.ts","webpack:///./src/app/layout/adminList/adminList.module.ts"],"names":[],"mappings":"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","file":"adminList-adminList-module-es2015.js","sourcesContent":["module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Admins'\\\"></app-page-header>\\r\\n\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n        <p style=\\\"color: white\\\">Please Wait... </p>  \\r\\n    </ngx-spinner> \\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <span>Admin Details</span>\\r\\n                    <button class=\\\"btn btn-sm btn-primary pull-right\\\" (click)=\\\"open(content,'add','')\\\">Add</button>\\r\\n                </div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>S. No.</th>\\r\\n                                <th>Name</th>\\r\\n                                <th>Email</th>\\r\\n                                <th class=\\\"text-center actionHeader\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody *ngIf=\\\"listData?.length != 0\\\">\\r\\n                            <tr *ngFor=\\\"let data of listData; index as i\\\">\\r\\n                                <td>{{i+1}}</td>\\r\\n                                <td>{{data.name}}</td>\\r\\n                                <td>{{data.email}}</td>\\r\\n                                <td class=\\\"text-center actionHeader\\\">\\r\\n                                    <button (click)=\\\"open(content, 'edit', data.id)\\\" class=\\\"btn btn-sm btn-primary fa fa-pencil\\\"></button>\\r\\n                                    &nbsp;\\r\\n                                    <button (click)=\\\"deleteData(data.id)\\\" class=\\\"btn btn-sm btn-danger fa fa-trash\\\"></button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Add/Edit Modal Start -->\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Admin Detail</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <form [formGroup]=\\\"detailForm\\\" (ngSubmit)=\\\"saveDetail()\\\" >\\r\\n                <div class=\\\"formbox\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-4 col-sm-4 col-xl-4 col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Name *</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.name.errors }\\\"/>\\r\\n                                <div *ngIf=\\\"submitted && fval.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"fval.name.errors.required\\\">\\r\\n                                        Name is required\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-4 col-sm-4 col-xl-4 col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Email ID *</label>\\r\\n                                <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.email.errors }\\\"/>\\r\\n                                <div *ngIf=\\\"submitted && fval.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"fval.email.errors.required\\\">\\r\\n                                        Email ID is required\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"fval.email.errors.email\\\">\\r\\n                                        Enter valid Email Id\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-4 col-sm-4 col-xl-4 col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Password *</label>\\r\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" minlength=\\\"6\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.password.errors }\\\"/>\\r\\n                                <div *ngIf=\\\"submitted && fval.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"fval.password.errors.required\\\">\\r\\n                                        Password is required\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"fval.password.errors.minlength\\\">\\r\\n                                        Password must be at least 6 characters\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger pull-right marLt_2Per\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\">Save</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    <!-- Add/Edit Modal End -->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminListComponent } from './adminList.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', \r\n        component: AdminListComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AdminListRoutingModule {\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbkxpc3QvYWRtaW5MaXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subject } from 'rxjs';\r\nimport { ApiService } from \"../service/api.service\";\r\nimport { ExportService } from \"../service/export.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-tables',\r\n    templateUrl: './adminList.component.html',\r\n    styleUrls: ['./adminList.component.scss'],\r\n    animations: [routerTransition()],\r\n    providers: [ApiService],\r\n})\r\n\r\nexport class AdminListComponent implements OnInit {\r\n    @ViewChild(DataTableDirective, {static: false})\r\n    dtElement: DataTableDirective;\r\n    isDtInitialized:boolean = false;\r\n    title = 'angulardatatables';\r\n    dtOptions: DataTables.Settings = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n\r\n    public apiUrl : any;\r\n    public listData : any;\r\n    public editID : any;\r\n    public modalReference : any;\r\n    public formType : string;\r\n    closeResult : string;    \r\n    detailForm : FormGroup;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private apiService: ApiService,\r\n        private exportService: ExportService,\r\n        private modalService: NgbModal,\r\n        public router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private toastr: ToastrService,\r\n        private SpinnerService: NgxSpinnerService\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.dtOptions = {\r\n            pagingType: 'full_numbers',\r\n            pageLength: 5,\r\n            processing: true\r\n        };\r\n        this.detailForm = this.formBuilder.group({\r\n            name: [\"\", Validators.required],\r\n            email: ['', [Validators.required,Validators.email]],\r\n            password: ['', [Validators.required,Validators.minLength(6)]],\r\n        });\r\n        this.listGetData();\r\n    }\r\n\r\n\r\n    listGetData(){\r\n        this.SpinnerService.show();\r\n        this.apiService.getData('user/list?pageName=setting').subscribe(res => {\r\n            this.listData = res['data'];\r\n            if (this.isDtInitialized) {\r\n                this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.destroy();\r\n                    this.dtTrigger.next();\r\n                });\r\n            } else {\r\n                this.isDtInitialized = true;\r\n                this.dtTrigger.next();\r\n            }\r\n            this.SpinnerService.hide();\r\n        },\r\n        error => {\r\n            if(error['error']){\r\n                this.toastr.error(error.error['message']);\r\n                this.router.navigate(['/login']);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    editData(id:any){\r\n        this.SpinnerService.show();\r\n        this.editID = id;\r\n        this.apiService.getData('user/list/'+this.editID+'?pageName=setting').subscribe(res => {\r\n            this.detailForm.controls['name'].setValue(res['data'].name);\r\n            this.detailForm.controls['email'].setValue(res['data'].email);\r\n            this.detailForm.controls['password'].setValue(res['data'].password);\r\n            this.SpinnerService.hide();\r\n        });    \r\n    }\r\n\r\n    \r\n    saveDetail(){\r\n        this.submitted = true;\r\n        if (this.detailForm.invalid) {\r\n            return;\r\n        }\r\n        this.SpinnerService.show();\r\n        if(this.formType == 'add'){\r\n            this.apiUrl = 'user/create';\r\n        }else{\r\n            this.detailForm.value['id'] = this.editID;\r\n            this.apiUrl = 'user/update';\r\n        }\r\n        if(this.formType == 'edit'){\r\n            this.detailForm.value['user_id'] = this.editID;\r\n        }\r\n        this.detailForm.value['pageName'] = 'setting';\r\n        this.apiService.saveData(this.apiUrl, this.detailForm.value).subscribe(res => {\r\n            this.SpinnerService.hide(); \r\n            if(res['status']){\r\n                this.modalReference.close();\r\n                this.listGetData();\r\n                this.toastr.success(res['message']);\r\n            }else{\r\n                this.toastr.error(res['message']);\r\n            }\r\n        });    \r\n    }\r\n\r\n\r\n    deleteData(id:any){\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You wan't to delete ?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                var obj = {\r\n                    \"id\" : id\r\n                }\r\n                this.apiService.saveData('user/delete?pageName=setting', obj).subscribe(res => {\r\n                    this.listGetData();\r\n                    this.toastr.success(res['message']);\r\n                });    \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n\r\n            }\r\n        })\r\n    }    \r\n\r\n\r\n    open(content:any, type:any, id:any) {\r\n        this.submitted = false;\r\n        this.detailForm.markAsPristine();\r\n        this.detailForm.markAsUntouched();\r\n        this.detailForm.updateValueAndValidity();\r\n        this.detailForm.reset();\r\n        this.detailForm.clearValidators();\r\n        Object.keys(this.detailForm.controls).forEach(key => {\r\n            this.detailForm.get(key).setErrors(null) ;\r\n        });\r\n        \r\n        if(type == 'edit'){\r\n            this.editData(id);\r\n            this.formType = 'edit';\r\n            this.detailForm = this.formBuilder.group({\r\n                name: [\"\", Validators.required],\r\n                email: ['', [Validators.required,Validators.email]],\r\n                password: [\"\"],\r\n            });\r\n        }else{\r\n            this.formType = 'add';\r\n            this.detailForm = this.formBuilder.group({\r\n                name: [\"\", Validators.required],\r\n                email: ['', [Validators.required,Validators.email]],\r\n                password: [\"\", Validators.required],\r\n            });\r\n        }\r\n\r\n        this.modalReference = this.modalService.open(content);\r\n        this.modalReference.result.then((result) => {\r\n            this.closeResult = `Closed with: ${result}`;\r\n        }, (reason) => {\r\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n        });\r\n    }\r\n\r\n\r\n    getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return  `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n\r\n    get fval() {\r\n        return this.detailForm.controls; \r\n    }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminListRoutingModule } from './adminList-routing.module';\r\nimport { AdminListComponent } from './adminList.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";  \r\n\r\n@NgModule({\r\n    imports: [\r\n    \tCommonModule, \r\n    \tAdminListRoutingModule, \r\n    \tPageHeaderModule, \r\n    \tNgbModule,\r\n    \tFormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        HttpClientJsonpModule,\r\n        DataTablesModule,\r\n        NgxSpinnerModule\r\n    ],\r\n    declarations: [AdminListComponent]\r\n})\r\n\r\nexport class AdminListModule {}\r\n"],"sourceRoot":""}